{
  "matrices": [
    {
      "title": "Issue Credential - Data Integrity",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:47bc8315-e2cb-4f6a-bb78-05991951b914",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 285,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 513,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:9a89b684-dc0a-4f73-91cb-849add45d125",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 800,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 78,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:504b44ae-87c8-4efa-8a5c-052252a4c6f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 879,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:b30ba16b-5f47-49bb-a539-ac8b18c04dd9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 968,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:987669b0-ad94-4a6e-93f7-c08d73f536ce",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1009,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 220,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:1df6dd2d-ab78-4ed4-b28b-8820020d16a4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1229,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:4a0fd472-5893-4c39-acc3-5df292ddb468",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1271,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:022310eb-a963-46ec-b79b-3dd258f24e03",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1311,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 267,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:852d4854-53a1-409b-af57-26c270996504",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1579,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:3997c6d7-c3e3-471c-87df-e673cf80fa0e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1679,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 399,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:c8ae3426-6b1c-43b0-8635-0da0a794cead",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2078,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 92,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:e4ec482a-546e-4a86-8616-840842c35d02",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2170,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 625,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', 'content-length': '681', 'content-type': 'application/ld+json', date: 'Sun, 07 Jul 2024 05:10:39 GMT', server: 'Google Frontend', 'x-cloud-trace-context': '3a82ae68376d17fcc82cdf817c6f9ddc' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', 'content-length': '681', 'content-type': 'application/ld+json', date: 'Sun, 07 Jul 2024 05:10:39 GMT', server: 'Google Frontend', 'x-cloud-trace-context': '3a82ae68376d17fcc82cdf817c6f9ddc' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:9:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:168:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:e78ee08e-0d49-4202-8434-9850c03ce168",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2797,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 175,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "D1PKkLgmv83TB2zsKJ0HL",
          "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
          "_testId": "urn:uuid:7fe8ce42-d4e6-41a2-a99e-bbad7febb963"
        },
        {
          "title": "Danube Tech",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:3b492d74-0944-41cf-b543-f82f85430337",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2974,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 596,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:dad2adc4-1a34-4258-bedf-b1d8208975a9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3570,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 103,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:245fb781-4404-4902-b14f-98047e4eb181",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3673,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 103,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:0ce9ab8d-3ed8-4acc-9d8f-6d60d3f4fb8f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3777,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:d79da44d-0fa6-4db0-bd5a-fb777cae3774",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3881,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 709,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:868a5725-2a13-4d9e-bdf6-29e5af60bb86",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4591,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:1b3b878c-c901-4410-9f18-520c2a0c49f2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4695,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:2d39e948-b02c-4172-9dcc-c97b35047ce1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4800,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 426,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:ca98ed4e-00e5-4754-bc76-58712b2d2319",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5226,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:7d173bf2-5ec1-4cdd-a8dc-1c72a626a3fd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5330,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 213,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:14:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:143:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:ac7cec03-07e4-4de5-971d-e437939a9601",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 105,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:a4436386-c1e7-49ad-9a75-b150380dd12d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5648,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 527,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:c57cf6f8-0030-44e8-a1d5-19cabbe0604a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6174,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 181,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "D1PKkLgmv83TB2zsKJ0HL",
          "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
          "_testId": "urn:uuid:0d8f1d53-7916-43dd-a1d7-6e4fae824c92"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:932299dd-82ed-4b0a-9ae7-7ae34bdcb2c0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6357,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 624,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:e2fc9618-8f4c-4cf6-b6ae-03f94b10319a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6980,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:701ee468-6959-4287-91ca-75cdd8fb7c01",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7020,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:bcfdb2f5-596a-4425-af87-d402f0b83e01",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7085,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 33,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:fc41b0f8-fafd-4376-8180-da4a9cdd747e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7118,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 196,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:ef9c7807-adb0-4ed0-8e9b-a7ead267712c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7315,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 619,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:14:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:98:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:f1da9bbe-ad24-46de-88ab-67e027b43f7c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7934,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:14:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:108:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:a871a6b0-8fdb-4dde-9ca3-e60c8c1ca4f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7980,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:14:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:120:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:b6256a2a-c541-43f6-9fe0-7ee5ff7467a6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8021,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { 'access-control-allow-origin': '*', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', 'cache-control': 'no-cache, no-store, must-revalidate', 'content-length': '748', 'content-type': 'application/json; charset=utf-8', date: 'Sun, 07 Jul 2024 05:10:44 GMT', etag: 'W/\"2ec-PD64Tn6CdBdHdquj9AvmmpwXkQs\"', expires: '0', pragma: 'no-cache', server: 'Google Frontend', vary: 'X-HTTP-Method-Override, Accept-Encoding', via: '1.1 google', 'x-cloud-trace-context': 'c96e7f14fef160a4ddd25205a846df72' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { 'access-control-allow-origin': '*', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', 'cache-control': 'no-cache, no-store, must-revalidate', 'content-length': '748', 'content-type': 'application/json; charset=utf-8', date: 'Sun, 07 Jul 2024 05:10:44 GMT', etag: 'W/\"2ec-PD64Tn6CdBdHdquj9AvmmpwXkQs\"', expires: '0', pragma: 'no-cache', server: 'Google Frontend', vary: 'X-HTTP-Method-Override, Accept-Encoding', via: '1.1 google', 'x-cloud-trace-context': 'c96e7f14fef160a4ddd25205a846df72' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:9:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:131:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:041506dc-5bc9-4fdf-86a4-4542086bab13",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8097,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { 'access-control-allow-origin': '*', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', 'cache-control': 'no-cache, no-store, must-revalidate', 'content-length': '754', 'content-type': 'application/json; charset=utf-8', date: 'Sun, 07 Jul 2024 05:10:44 GMT', etag: 'W/\"2f2-NeT1aAXexpRHDqVAjUZ+z0GNeCc\"', expires: '0', pragma: 'no-cache', server: 'Google Frontend', vary: 'X-HTTP-Method-Override, Accept-Encoding', via: '1.1 google', 'x-cloud-trace-context': '6a10510d508c1636d7d0ced8eca8007c' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { 'access-control-allow-origin': '*', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', 'cache-control': 'no-cache, no-store, must-revalidate', 'content-length': '754', 'content-type': 'application/json; charset=utf-8', date: 'Sun, 07 Jul 2024 05:10:44 GMT', etag: 'W/\"2f2-NeT1aAXexpRHDqVAjUZ+z0GNeCc\"', expires: '0', pragma: 'no-cache', server: 'Google Frontend', vary: 'X-HTTP-Method-Override, Accept-Encoding', via: '1.1 google', 'x-cloud-trace-context': '6a10510d508c1636d7d0ced8eca8007c' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:9:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:143:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:9dc28d01-cf3b-4568-9ac8-85c6fdff4b5a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8173,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:14:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:154:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:3a4ae57c-1cae-421d-a1b1-7d27c6a7080c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8214,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:14:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:168:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:31c9e057-f333-4853-a19d-4befe775f36c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8252,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "D1PKkLgmv83TB2zsKJ0HL",
          "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
          "_testId": "urn:uuid:abdf4fc2-5f53-4ad1-b7a4-50b9a7603d4d"
        },
        {
          "title": "EWF",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:b3990987-6e68-4397-8456-0d85c651f6f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8346,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 549,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:6d3cfc0e-2d14-4da7-bb47-bbe57d16659d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8896,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:164619fc-5ace-411f-8e57-c09983ca443b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8990,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:6f861227-f4f5-4e29-bb74-6df43ec0b161",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9078,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:7a83d89f-1bce-4dda-9886-8a43646ea6de",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9163,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 641,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:193ca93f-ef89-4b21-aa5c-bbfe1fb917ba",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9805,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:a6e1bc8f-4226-4ffe-a6f6-84b80fb20cf7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9892,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 88,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:d82f30c7-48ba-4da5-94b0-659f2232b6c6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9981,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 357,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:6b456e7c-cb55-4d02-9e28-4e6d0dfb6f96",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10339,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:cc76c4ac-4fe9-477c-afa0-1d8535e7ce59",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10424,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 356,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:803932cc-3944-42a9-aec8-77b313efe4ec",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10780,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:2437ed81-5fc2-4007-9d55-eb6c5a2daffa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10866,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 451,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:6aaf8283-08eb-499e-9f08-f71c36399ffd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11316,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "D1PKkLgmv83TB2zsKJ0HL",
          "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
          "_testId": "urn:uuid:e2d441b3-e19d-4e48-8ce9-80869d6acaa4"
        },
        {
          "title": "GS1 US",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:00e3f792-a9d2-4062-9c25-ef1afb7f4c06",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11406,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 9833,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:a0fe3100-832b-46ef-915f-e5a93b78395d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21239,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 56,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:e818e775-bfee-45b8-b85d-468a17d9ff01",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21295,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 50,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:f7f9447e-87ec-41c2-bbe4-f2cd66f6e5f2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21347,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 54,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:2a973c2a-a595-46b6-9504-1852b242fa68",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21401,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 261,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:1aefb54b-54ca-4287-beb9-4be5c53f4277",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21662,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 34,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:4173ebbb-eb11-4338-9cf9-f4ab2f4ca18b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21696,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 31,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:a14cde83-c337-4e59-b3ed-4390f7034089",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21727,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 147,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:eb81774c-fcc0-4e43-9324-752fb856a089",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21874,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:a1ddc54f-7cf8-4127-a85c-58c308dbe506",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21912,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 141,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:8b0eece2-37f0-488c-a8a6-c1773e532179",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22054,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 54,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:7a48499e-40a9-4f31-ae4a-912b64c2a136",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22108,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 168,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:c20e5ff3-56ea-45c2-88b5-321b22d7984d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22276,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 395,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "D1PKkLgmv83TB2zsKJ0HL",
          "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
          "_testId": "urn:uuid:eed2ffcc-4e07-4637-a8e5-80c6f4336557"
        },
        {
          "title": "IDLab",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:e4b7cc5b-a67a-4bc8-9c3f-319a96c1a7e0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22671,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 206,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:d258e452-cd13-4910-9352-262a9b71844b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22877,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 62,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:a4a4ee32-51fb-4be7-9b04-4dfda2fdcab0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22939,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:98f099cc-4062-4e77-ad67-12c077ef9751",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23004,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:fddbe186-c5af-4ed8-b4ad-44f810cc8a13",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23068,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 284,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:c11ffb28-72fd-46d7-bea8-791548fc35c8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23352,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:08b83ca6-3ccd-4539-8b4e-a4973e2cb139",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23416,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:a25a924b-24b8-404c-aba6-4d14f3ef9cfa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23480,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 260,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:cbdfd5af-549e-4ab7-8aad-3d23a36de82f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23740,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:76c306b1-5766-459f-bd5b-7ee19c119bf6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23804,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 260,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:73576dfa-8942-4551-afb0-86741d5e4231",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24063,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:0c45ceaf-0929-4afd-b1c7-a2586b006828",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24127,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 320,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:abcf5aff-1915-419d-8732-88b584396d57",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24447,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "D1PKkLgmv83TB2zsKJ0HL",
          "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
          "_testId": "urn:uuid:50e1f46e-1467-4346-b1ff-297defebc692"
        },
        {
          "title": "LearnCard",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:01b0f997-a8e2-4226-8c20-3fa4c1c787a7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 291,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:f2077cae-8a96-4fd6-a4ea-65b8c09ddc78",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24835,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:d311cc1a-52f1-4b97-92a6-b643255ba06f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24874,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:7194ffba-cda8-41da-acfb-17f28968e823",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24914,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:2a699969-8a2a-4085-a955-d44ebddeb228",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24961,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 181,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:3137db83-8ad8-432b-aead-b077d00eaf1d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25142,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 35,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:fe024068-2256-4639-9de4-725b17f3f1d3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25176,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 24,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:a5201dac-1022-4632-bfee-7f9470515f44",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25201,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 160,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:44fcad07-1348-4fb7-9e1c-dc84845c806d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25362,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:41270ac5-be7f-4db1-95d4-c271b1e8b26a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25400,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 138,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:5edacd63-7c7b-4e24-bcda-263af6a01371",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25538,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:6bf990a0-9d96-4c73-bdf3-e9d4375edb5e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25578,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 204,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:d5d02417-bcbe-4ec2-8231-d53b82355d64",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25785,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "D1PKkLgmv83TB2zsKJ0HL",
          "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
          "_testId": "urn:uuid:cc9f02d7-cf78-4ffb-8e8e-78580e90a49f"
        },
        {
          "title": "Mavennet",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:49b94ed4-8557-46ad-9ecb-75749d59d8af",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25862,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1080,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:b8322822-7307-46ac-af03-899502832286",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26943,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:6cea7cf4-24f2-41f4-9c9c-ec27af99148b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26989,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 36,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:c0be5333-346b-4239-ae5c-b5d607a9110d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27025,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 31,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:455c3345-bdf7-4c38-9c39-25e56aad67d3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27056,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 127,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:cc3d8a9d-fc7a-4baf-b24d-81c75bfe5167",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27183,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 115,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:834876b5-5700-497f-8151-6edae4b7f8da",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27298,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:2f9fd5c1-1893-4c27-b61e-2aca64e9b45f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27339,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 247,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:19684320-da08-4768-a1ef-0e08cb714e0f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27586,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 27,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:89878c51-6fcf-4fcf-be76-c75982c3755e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27613,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 328,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { 'access-control-allow-origin': '*', 'access-control-expose-headers': 'Content-Disposition', authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', connection: 'keep-alive', 'content-length': '620', 'content-security-policy': \"default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests\", 'content-type': 'application/json; charset=utf-8', 'cross-origin-opener-policy': 'same-origin', 'cross-origin-resource-policy': 'same-origin', date: 'Sun, 07 Jul 2024 05:11:04 GMT', etag: 'W/\"26c-/4xRnI7CF7KwXQ2hX1SKTQMMMzg\"', 'origin-agent-cluster': '?1', 'referrer-policy': 'no-referrer', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-content-type-options': 'nosniff', 'x-dns-prefetch-control': 'off', 'x-download-options': 'noopen', 'x-frame-options': 'SAMEORIGIN', 'x-permitted-cross-domain-policies': 'none', 'x-xss-protection': '0' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { 'access-control-allow-origin': '*', 'access-control-expose-headers': 'Content-Disposition', authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', connection: 'keep-alive', 'content-length': '620', 'content-security-policy': \"default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests\", 'content-type': 'application/json; charset=utf-8', 'cross-origin-opener-policy': 'same-origin', 'cross-origin-resource-policy': 'same-origin', date: 'Sun, 07 Jul 2024 05:11:04 GMT', etag: 'W/\"26c-/4xRnI7CF7KwXQ2hX1SKTQMMMzg\"', 'origin-agent-cluster': '?1', 'referrer-policy': 'no-referrer', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-content-type-options': 'nosniff', 'x-dns-prefetch-control': 'off', 'x-download-options': 'noopen', 'x-frame-options': 'SAMEORIGIN', 'x-permitted-cross-domain-policies': 'none', 'x-xss-protection': '0' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:9:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:143:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:34e1fdbb-7499-4bf5-b576-ebb42827506a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27942,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 39,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:f2ad41d0-0e2b-44b4-b134-e5bc4c067295",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27980,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 143,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:781b700b-34ee-4596-95e6-fa3f5a09e336",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 254,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "D1PKkLgmv83TB2zsKJ0HL",
          "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
          "_testId": "urn:uuid:43276fdb-4084-4266-babc-4a31ac451b96"
        },
        {
          "title": "SecureKey",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:4024b4de-3520-4dfd-afa2-a40d2a434437",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28378,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 410,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no error, got fetch failed: expected TypeError: fetch failed { …(2) } to not exist",
                "showDiff": false,
                "actual": {
                  "requestUrl": "https://issuer-vcs.sandbox.trustbloc.dev/vc-issuer-interop-key/credentials/issue"
                },
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no error, got fetch failed: expected TypeError: fetch failed { …(2) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldReturnResult (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:19:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:41:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:462730de-e43a-4823-b3c1-4bd33475a2fe",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28790,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 44,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:55:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:16146cef-cca4-4973-89db-4569f680e298",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:65:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:d99e4020-d604-48b3-b94a-c204aa277fdd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28899,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 84,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:75:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:53952c13-bb82-47e0-9fe8-5142ec8acb8d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28983,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 63,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:87:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:792dd96e-fead-4c08-9dc6-3bc3ed209fd9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29046,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 67,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:98:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:94534b9d-5510-48ae-a09c-5e96d1cc2d8c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29114,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:108:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:cb280cd4-340d-45af-a5bb-bc2e4b27d4b0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:120:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:ea9c23f4-24bf-41b4-b97f-11d696beaee6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29233,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 86,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:131:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:93d3ea52-632c-4f59-8554-cb82d3a88d55",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29318,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 58,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:143:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:0bf3aaf4-870d-4d33-96b1-9d4413113c74",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29377,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:154:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:d392e6d9-aa0a-4c84-848c-25bd7f411ca1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29457,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:168:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:01ab191b-9e48-42a8-b600-1587e38ad90e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29544,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no error, got fetch failed: expected TypeError: fetch failed { …(2) } to not exist",
                "showDiff": false,
                "actual": {
                  "requestUrl": "https://issuer-vcs.sandbox.trustbloc.dev/vc-issuer-interop-key/credentials/issue"
                },
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no error, got fetch failed: expected TypeError: fetch failed { …(2) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldReturnResult (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:19:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:193:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "D1PKkLgmv83TB2zsKJ0HL",
          "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
          "_testId": "urn:uuid:6d4476ba-15ca-41d4-b3db-cde7fab6618f"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:b065582b-c60e-43fb-a54d-d1fb23fadc39",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29624,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:3744fc24-f2fd-41f5-a02e-590e31b5ab34",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29701,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 21,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:3d044341-ba16-46de-82bf-a0f32d384eb2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29722,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 25,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:b3d57425-141c-406e-a04b-2f4fa224c18a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29746,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 18,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:05c30964-a51b-4b11-a345-9b796e87c0ae",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29765,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 144,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:2cc755e7-c699-4e62-a060-37b6aacb4d6d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29909,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:421b26a9-1aec-4df5-a774-8553b53bf2bc",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29929,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 20,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:8a2bc461-343e-47b2-aa0c-a1c011832346",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29949,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 70,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:9098d3a9-6282-47d9-85dc-02f5951aa7ea",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30019,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:9610a723-eb28-4dc9-8bca-9f96f3e4a1c3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:37cf4ce6-fe6e-4c60-bced-d58526aca930",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30110,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 21,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:395df370-718d-4a87-9ea8-fc29c07909cf",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30130,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 92,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:58367339-9514-49b6-97c3-006094fe56e2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30223,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "D1PKkLgmv83TB2zsKJ0HL",
          "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
          "_testId": "urn:uuid:6355aff8-23d6-43f4-be6e-d431b13ee954"
        },
        {
          "title": "Trinsic",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:906a34cf-61e4-4d95-a752-dffea82c6587",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30250,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 259,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:c476560f-2df9-49c6-b205-2439111c726d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30510,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:d9b42851-2b4f-4c62-9ab0-e1b9d3577454",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30530,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 16,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:9c0d0b8d-9e4f-49c0-9838-acae66ddeb0c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30548,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 16,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:1987e90a-7816-46c3-b473-b3923ad17471",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30564,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 817,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:c0b06dd8-7506-4334-9e87-b86307b7301d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31380,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:766d8bdf-c610-415e-a2a0-7a49af68e840",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31399,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 16,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:2ebdc86b-7ece-4460-8b36-455e8dba85c5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31416,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 65,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:917e6ea7-9edc-41cd-aba0-ea26a9faec98",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31482,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 17,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:2e3297e6-3c77-46df-a512-4d9a85b3345f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31498,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:56e381a2-d181-4dcb-a508-9b1a2e8660ff",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31566,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 16,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:20575baa-e3ae-4355-97ba-085434d346fa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31582,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 88,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "",
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:960a1af2-7547-44a7-804d-4fc1b2eb0f22",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31670,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 34,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "D1PKkLgmv83TB2zsKJ0HL",
          "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
          "_testId": "urn:uuid:0b0e0b6a-751e-43d3-b46a-40b5fff1094f"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "tt100MzcTfpiJ0QkTXn0p",
      "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
      "summary": {},
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Issuer",
      "reportData": [],
      "_testId": "urn:uuid:f8d67d9b-c017-4288-a5b6-968c9d15992b",
      "columns": [
        "apicatalog.com",
        "Danube Tech",
        "Digital Bazaar",
        "EWF",
        "GS1 US",
        "IDLab",
        "LearnCard",
        "Mavennet",
        "SecureKey",
        "SpruceID",
        "Trinsic"
      ],
      "rows": [
        {
          "id": "MUST successfully issue a credential.",
          "cells": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:47bc8315-e2cb-4f6a-bb78-05991951b914",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 285,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 513,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:3b492d74-0944-41cf-b543-f82f85430337",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2974,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 596,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:932299dd-82ed-4b0a-9ae7-7ae34bdcb2c0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6357,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 624,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:b3990987-6e68-4397-8456-0d85c651f6f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8346,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 549,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:00e3f792-a9d2-4062-9c25-ef1afb7f4c06",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11406,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 9833,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:e4b7cc5b-a67a-4bc8-9c3f-319a96c1a7e0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22671,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 206,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:01b0f997-a8e2-4226-8c20-3fa4c1c787a7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 291,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:49b94ed4-8557-46ad-9ecb-75749d59d8af",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25862,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1080,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:4024b4de-3520-4dfd-afa2-a40d2a434437",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28378,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 410,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no error, got fetch failed: expected TypeError: fetch failed { …(2) } to not exist",
                "showDiff": false,
                "actual": {
                  "requestUrl": "https://issuer-vcs.sandbox.trustbloc.dev/vc-issuer-interop-key/credentials/issue"
                },
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no error, got fetch failed: expected TypeError: fetch failed { …(2) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldReturnResult (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:19:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:41:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:b065582b-c60e-43fb-a54d-d1fb23fadc39",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29624,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        should.exist(issuedVc, 'Expected result to have data.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:906a34cf-61e4-4d95-a752-dffea82c6587",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30250,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 259,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "Request body MUST have property \"credential\".",
          "cells": [
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:9a89b684-dc0a-4f73-91cb-849add45d125",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 800,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 78,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:dad2adc4-1a34-4258-bedf-b1d8208975a9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3570,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 103,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:e2fc9618-8f4c-4cf6-b6ae-03f94b10319a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6980,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:6d3cfc0e-2d14-4da7-bb47-bbe57d16659d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8896,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:a0fe3100-832b-46ef-915f-e5a93b78395d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21239,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 56,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:d258e452-cd13-4910-9352-262a9b71844b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22877,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 62,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:f2077cae-8a96-4fd6-a4ea-65b8c09ddc78",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24835,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:b8322822-7307-46ac-af03-899502832286",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26943,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:462730de-e43a-4823-b3c1-4bd33475a2fe",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28790,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 44,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:55:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:3744fc24-f2fd-41f5-a02e-590e31b5ab34",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29701,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 21,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:c476560f-2df9-49c6-b205-2439111c726d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30510,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "credential MUST have property \"@context\".",
          "cells": [
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:504b44ae-87c8-4efa-8a5c-052252a4c6f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 879,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:245fb781-4404-4902-b14f-98047e4eb181",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3673,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 103,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:701ee468-6959-4287-91ca-75cdd8fb7c01",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7020,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:164619fc-5ace-411f-8e57-c09983ca443b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8990,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:e818e775-bfee-45b8-b85d-468a17d9ff01",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21295,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 50,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:a4a4ee32-51fb-4be7-9b04-4dfda2fdcab0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22939,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:d311cc1a-52f1-4b97-92a6-b643255ba06f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24874,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:6cea7cf4-24f2-41f4-9c9c-ec27af99148b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26989,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 36,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:16146cef-cca4-4973-89db-4569f680e298",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:65:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:3d044341-ba16-46de-82bf-a0f32d384eb2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29722,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 25,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:d9b42851-2b4f-4c62-9ab0-e1b9d3577454",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30530,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 16,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "credential \"@context\" MUST be an array.",
          "cells": [
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:b30ba16b-5f47-49bb-a539-ac8b18c04dd9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 968,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:0ce9ab8d-3ed8-4acc-9d8f-6d60d3f4fb8f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3777,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:bcfdb2f5-596a-4425-af87-d402f0b83e01",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7085,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 33,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:6f861227-f4f5-4e29-bb74-6df43ec0b161",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9078,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:f7f9447e-87ec-41c2-bbe4-f2cd66f6e5f2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21347,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 54,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:98f099cc-4062-4e77-ad67-12c077ef9751",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23004,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:7194ffba-cda8-41da-acfb-17f28968e823",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24914,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:c0be5333-346b-4239-ae5c-b5d607a9110d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27025,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 31,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:d99e4020-d604-48b3-b94a-c204aa277fdd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28899,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 84,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:75:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:b3d57425-141c-406e-a04b-2f4fa224c18a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29746,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 18,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:9c0d0b8d-9e4f-49c0-9838-acae66ddeb0c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30548,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 16,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "credential \"@context\" items MUST be strings.",
          "cells": [
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:987669b0-ad94-4a6e-93f7-c08d73f536ce",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1009,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 220,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:d79da44d-0fa6-4db0-bd5a-fb777cae3774",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3881,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 709,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:fc41b0f8-fafd-4376-8180-da4a9cdd747e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7118,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 196,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:7a83d89f-1bce-4dda-9886-8a43646ea6de",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9163,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 641,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:2a973c2a-a595-46b6-9504-1852b242fa68",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21401,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 261,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:fddbe186-c5af-4ed8-b4ad-44f810cc8a13",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23068,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 284,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:2a699969-8a2a-4085-a955-d44ebddeb228",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24961,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 181,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:455c3345-bdf7-4c38-9c39-25e56aad67d3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27056,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 127,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:53952c13-bb82-47e0-9fe8-5142ec8acb8d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28983,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 63,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:87:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:05c30964-a51b-4b11-a345-9b796e87c0ae",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29765,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 144,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:1987e90a-7816-46c3-b473-b3923ad17471",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30564,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 817,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "credential MUST have property \"type\"",
          "cells": [
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:1df6dd2d-ab78-4ed4-b28b-8820020d16a4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1229,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:868a5725-2a13-4d9e-bdf6-29e5af60bb86",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4591,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:ef9c7807-adb0-4ed0-8e9b-a7ead267712c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7315,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 619,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:14:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:98:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:193ca93f-ef89-4b21-aa5c-bbfe1fb917ba",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9805,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:1aefb54b-54ca-4287-beb9-4be5c53f4277",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21662,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 34,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:c11ffb28-72fd-46d7-bea8-791548fc35c8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23352,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:3137db83-8ad8-432b-aead-b077d00eaf1d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25142,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 35,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:cc3d8a9d-fc7a-4baf-b24d-81c75bfe5167",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27183,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 115,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:792dd96e-fead-4c08-9dc6-3bc3ed209fd9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29046,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 67,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:98:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:2cc755e7-c699-4e62-a060-37b6aacb4d6d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29909,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:c0b06dd8-7506-4334-9e87-b86307b7301d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31380,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "\"credential.type\" MUST be an array.",
          "cells": [
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:4a0fd472-5893-4c39-acc3-5df292ddb468",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1271,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:1b3b878c-c901-4410-9f18-520c2a0c49f2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4695,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:f1da9bbe-ad24-46de-88ab-67e027b43f7c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7934,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:14:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:108:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:a6e1bc8f-4226-4ffe-a6f6-84b80fb20cf7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9892,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 88,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:4173ebbb-eb11-4338-9cf9-f4ab2f4ca18b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21696,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 31,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:08b83ca6-3ccd-4539-8b4e-a4973e2cb139",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23416,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:fe024068-2256-4639-9de4-725b17f3f1d3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25176,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 24,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:834876b5-5700-497f-8151-6edae4b7f8da",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27298,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:94534b9d-5510-48ae-a09c-5e96d1cc2d8c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29114,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:108:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:421b26a9-1aec-4df5-a774-8553b53bf2bc",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29929,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 20,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:766d8bdf-c610-415e-a2a0-7a49af68e840",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31399,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 16,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "\"credential.type\" items MUST be strings",
          "cells": [
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:022310eb-a963-46ec-b79b-3dd258f24e03",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1311,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 267,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:2d39e948-b02c-4172-9dcc-c97b35047ce1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4800,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 426,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:a871a6b0-8fdb-4dde-9ca3-e60c8c1ca4f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7980,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:14:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:120:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:d82f30c7-48ba-4da5-94b0-659f2232b6c6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9981,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 357,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:a14cde83-c337-4e59-b3ed-4390f7034089",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21727,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 147,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:a25a924b-24b8-404c-aba6-4d14f3ef9cfa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23480,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 260,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:a5201dac-1022-4632-bfee-7f9470515f44",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25201,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 160,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:2f9fd5c1-1893-4c27-b61e-2aca64e9b45f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27339,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 247,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:cb280cd4-340d-45af-a5bb-bc2e4b27d4b0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:120:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:8a2bc461-343e-47b2-aa0c-a1c011832346",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29949,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 70,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:2ebdc86b-7ece-4460-8b36-455e8dba85c5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31416,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 65,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "credential MUST have property \"issuer\"",
          "cells": [
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:852d4854-53a1-409b-af57-26c270996504",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1579,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:ca98ed4e-00e5-4754-bc76-58712b2d2319",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5226,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:b6256a2a-c541-43f6-9fe0-7ee5ff7467a6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8021,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { 'access-control-allow-origin': '*', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', 'cache-control': 'no-cache, no-store, must-revalidate', 'content-length': '748', 'content-type': 'application/json; charset=utf-8', date: 'Sun, 07 Jul 2024 05:10:44 GMT', etag: 'W/\"2ec-PD64Tn6CdBdHdquj9AvmmpwXkQs\"', expires: '0', pragma: 'no-cache', server: 'Google Frontend', vary: 'X-HTTP-Method-Override, Accept-Encoding', via: '1.1 google', 'x-cloud-trace-context': 'c96e7f14fef160a4ddd25205a846df72' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { 'access-control-allow-origin': '*', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', 'cache-control': 'no-cache, no-store, must-revalidate', 'content-length': '748', 'content-type': 'application/json; charset=utf-8', date: 'Sun, 07 Jul 2024 05:10:44 GMT', etag: 'W/\"2ec-PD64Tn6CdBdHdquj9AvmmpwXkQs\"', expires: '0', pragma: 'no-cache', server: 'Google Frontend', vary: 'X-HTTP-Method-Override, Accept-Encoding', via: '1.1 google', 'x-cloud-trace-context': 'c96e7f14fef160a4ddd25205a846df72' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:9:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:131:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:6b456e7c-cb55-4d02-9e28-4e6d0dfb6f96",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10339,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:eb81774c-fcc0-4e43-9324-752fb856a089",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21874,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:cbdfd5af-549e-4ab7-8aad-3d23a36de82f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23740,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:44fcad07-1348-4fb7-9e1c-dc84845c806d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25362,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:19684320-da08-4768-a1ef-0e08cb714e0f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27586,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 27,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:ea9c23f4-24bf-41b4-b97f-11d696beaee6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29233,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 86,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:131:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:9098d3a9-6282-47d9-85dc-02f5951aa7ea",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30019,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:917e6ea7-9edc-41cd-aba0-ea26a9faec98",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31482,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 17,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "\"credential.issuer\" MUST be a string or an object",
          "cells": [
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:3997c6d7-c3e3-471c-87df-e673cf80fa0e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1679,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 399,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:7d173bf2-5ec1-4cdd-a8dc-1c72a626a3fd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5330,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 213,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:14:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:143:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:041506dc-5bc9-4fdf-86a4-4542086bab13",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8097,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { 'access-control-allow-origin': '*', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', 'cache-control': 'no-cache, no-store, must-revalidate', 'content-length': '754', 'content-type': 'application/json; charset=utf-8', date: 'Sun, 07 Jul 2024 05:10:44 GMT', etag: 'W/\"2f2-NeT1aAXexpRHDqVAjUZ+z0GNeCc\"', expires: '0', pragma: 'no-cache', server: 'Google Frontend', vary: 'X-HTTP-Method-Override, Accept-Encoding', via: '1.1 google', 'x-cloud-trace-context': '6a10510d508c1636d7d0ced8eca8007c' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { 'access-control-allow-origin': '*', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000', authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', 'cache-control': 'no-cache, no-store, must-revalidate', 'content-length': '754', 'content-type': 'application/json; charset=utf-8', date: 'Sun, 07 Jul 2024 05:10:44 GMT', etag: 'W/\"2f2-NeT1aAXexpRHDqVAjUZ+z0GNeCc\"', expires: '0', pragma: 'no-cache', server: 'Google Frontend', vary: 'X-HTTP-Method-Override, Accept-Encoding', via: '1.1 google', 'x-cloud-trace-context': '6a10510d508c1636d7d0ced8eca8007c' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:9:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:143:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:cc76c4ac-4fe9-477c-afa0-1d8535e7ce59",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10424,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 356,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:a1ddc54f-7cf8-4127-a85c-58c308dbe506",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21912,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 141,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:76c306b1-5766-459f-bd5b-7ee19c119bf6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23804,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 260,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:41270ac5-be7f-4db1-95d4-c271b1e8b26a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25400,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 138,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:89878c51-6fcf-4fcf-be76-c75982c3755e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27613,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 328,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { 'access-control-allow-origin': '*', 'access-control-expose-headers': 'Content-Disposition', authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', connection: 'keep-alive', 'content-length': '620', 'content-security-policy': \"default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests\", 'content-type': 'application/json; charset=utf-8', 'cross-origin-opener-policy': 'same-origin', 'cross-origin-resource-policy': 'same-origin', date: 'Sun, 07 Jul 2024 05:11:04 GMT', etag: 'W/\"26c-/4xRnI7CF7KwXQ2hX1SKTQMMMzg\"', 'origin-agent-cluster': '?1', 'referrer-policy': 'no-referrer', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-content-type-options': 'nosniff', 'x-dns-prefetch-control': 'off', 'x-download-options': 'noopen', 'x-frame-options': 'SAMEORIGIN', 'x-permitted-cross-domain-policies': 'none', 'x-xss-protection': '0' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { 'access-control-allow-origin': '*', 'access-control-expose-headers': 'Content-Disposition', authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', connection: 'keep-alive', 'content-length': '620', 'content-security-policy': \"default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests\", 'content-type': 'application/json; charset=utf-8', 'cross-origin-opener-policy': 'same-origin', 'cross-origin-resource-policy': 'same-origin', date: 'Sun, 07 Jul 2024 05:11:04 GMT', etag: 'W/\"26c-/4xRnI7CF7KwXQ2hX1SKTQMMMzg\"', 'origin-agent-cluster': '?1', 'referrer-policy': 'no-referrer', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-content-type-options': 'nosniff', 'x-dns-prefetch-control': 'off', 'x-download-options': 'noopen', 'x-frame-options': 'SAMEORIGIN', 'x-permitted-cross-domain-policies': 'none', 'x-xss-protection': '0' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:9:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:143:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:93d3ea52-632c-4f59-8554-cb82d3a88d55",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29318,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 58,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:143:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:9610a723-eb28-4dc9-8bca-9f96f3e4a1c3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:2e3297e6-3c77-46df-a512-4d9a85b3345f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31498,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "credential MUST have property \"credentialSubject\"",
          "cells": [
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:c8ae3426-6b1c-43b0-8635-0da0a794cead",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2078,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 92,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:ac7cec03-07e4-4de5-971d-e437939a9601",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 105,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:9dc28d01-cf3b-4568-9ac8-85c6fdff4b5a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8173,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:14:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:154:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:803932cc-3944-42a9-aec8-77b313efe4ec",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10780,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:8b0eece2-37f0-488c-a8a6-c1773e532179",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22054,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 54,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:73576dfa-8942-4551-afb0-86741d5e4231",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24063,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 64,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:5edacd63-7c7b-4e24-bcda-263af6a01371",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25538,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:34e1fdbb-7499-4bf5-b576-ebb42827506a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27942,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 39,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:0bf3aaf4-870d-4d33-96b1-9d4413113c74",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29377,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:154:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:37cf4ce6-fe6e-4c60-bced-d58526aca930",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30110,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 21,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:56e381a2-d181-4dcb-a508-9b1a2e8660ff",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31566,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 16,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "\"credential.credentialSubject\" MUST be an object",
          "cells": [
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:e4ec482a-546e-4a86-8616-840842c35d02",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2170,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 625,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', 'content-length': '681', 'content-type': 'application/ld+json', date: 'Sun, 07 Jul 2024 05:10:39 GMT', server: 'Google Frontend', 'x-cloud-trace-context': '3a82ae68376d17fcc82cdf817c6f9ddc' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from issuer.: expected Response { status: 201, statusText: 'Created', headers: Headers { authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***', 'content-length': '681', 'content-type': 'application/ld+json', date: 'Sun, 07 Jul 2024 05:10:39 GMT', server: 'Google Frontend', 'x-cloud-trace-context': '3a82ae68376d17fcc82cdf817c6f9ddc' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:9:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:168:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:a4436386-c1e7-49ad-9a75-b150380dd12d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5648,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 527,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:3a4ae57c-1cae-421d-a1b1-7d27c6a7080c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8214,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 38,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:14:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:168:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:2437ed81-5fc2-4007-9d55-eb6c5a2daffa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10866,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 451,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:7a48499e-40a9-4f31-ae4a-912b64c2a136",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22108,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 168,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:0c45ceaf-0929-4afd-b1c7-a2586b006828",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24127,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 320,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:6bf990a0-9d96-4c73-bdf3-e9d4375edb5e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25578,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 204,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:f2ad41d0-0e2b-44b4-b134-e5bc4c067295",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27980,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 143,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:d392e6d9-aa0a-4c84-848c-25bd7f411ca1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29457,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code.: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code.: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at shouldThrowInvalidInput (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:11:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:168:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:395df370-718d-4a87-9ea8-fc29c07909cf",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30130,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 92,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes =\n          [null, true, 4, [], 'did:example:1234'];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:20575baa-e3ae-4355-97ba-085434d346fa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31582,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 88,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "credential MAY have property \"expirationDate\"",
          "cells": [
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "8LHmS2bORcgPIYOcbAdaV",
              "ctx": null,
              "_testId": "urn:uuid:e78ee08e-0d49-4202-8434-9850c03ce168",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2797,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 175,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "QLsDpKB55aMhSfkjlLWtN",
              "ctx": null,
              "_testId": "urn:uuid:c57cf6f8-0030-44e8-a1d5-19cabbe0604a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6174,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 181,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "_JnIoonGsg_zI-KHRgklY",
              "ctx": null,
              "_testId": "urn:uuid:31c9e057-f333-4853-a19d-4befe775f36c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8252,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "x1D4-BIwL8zSJZRTm6oNc",
              "ctx": null,
              "_testId": "urn:uuid:6aaf8283-08eb-499e-9f08-f71c36399ffd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11316,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "NVNU8AmtagVJgUM3BdnXw",
              "ctx": null,
              "_testId": "urn:uuid:c20e5ff3-56ea-45c2-88b5-321b22d7984d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "GS1 US",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22276,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 395,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "SGqsQhhY_KhkmarwplTOo",
              "ctx": null,
              "_testId": "urn:uuid:abcf5aff-1915-419d-8732-88b584396d57",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "IDLab",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24447,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "jNGGGR5XXyfg4eGO1lIFP",
              "ctx": null,
              "_testId": "urn:uuid:d5d02417-bcbe-4ec2-8231-d53b82355d64",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25785,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "kmWlChwUIVIr9ThZWRZ9J",
              "ctx": null,
              "_testId": "urn:uuid:781b700b-34ee-4596-95e6-fa3f5a09e336",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 254,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "BieKHQdHd27bJTrAUS85M",
              "ctx": null,
              "_testId": "urn:uuid:01ab191b-9e48-42a8-b600-1587e38ad90e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29544,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no error, got fetch failed: expected TypeError: fetch failed { …(2) } to not exist",
                "showDiff": false,
                "actual": {
                  "requestUrl": "https://issuer-vcs.sandbox.trustbloc.dev/vc-issuer-interop-key/credentials/issue"
                },
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no error, got fetch failed: expected TypeError: fetch failed { …(2) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at shouldReturnResult (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/assertions.js:19:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js:193:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "heTW2PR3Gnc80421WGQxQ",
              "ctx": null,
              "_testId": "urn:uuid:58367339-9514-49b6-97c3-006094fe56e2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30223,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYearLater = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = createISOTimeStamp(oneYearLater);\n        const {result, error} = await issuer.post({json: body});\n        shouldReturnResult({result, error});\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/10-issuer.js",
              "parent": "VZiEF29XIZUtukahFGv6R",
              "ctx": null,
              "_testId": "urn:uuid:960a1af2-7547-44a7-804d-4fc1b2eb0f22",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31670,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 34,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    },
    {
      "title": "Issue Credential - JWT",
      "ctx": null,
      "suites": [
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        should.exist(result, 'Expected result from issuer.');\n        should.exist(issuedVc, 'Expected result to have data.');\n        should.not.exist(error, 'Expected issuer to not Error.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:e22a175e-0181-413c-9d5e-4aa675bde80c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31705,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:3c2ae681-4883-46ca-98d1-825db3507d05",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31731,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:a4fecc6b-91ac-4a19-809b-dddc033efcfe",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31750,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:7603dc7b-ed8d-4dbe-a86e-763f8bb11767",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31772,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:47b6c8b9-5873-4cb8-b8ea-0f7246d887f6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31794,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:0804bd7e-fe79-4e5a-aa66-8ea980f742b9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31870,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 28,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:ff296a24-407e-42bb-8446-a05bdf2da2b4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31898,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:667dc905-a1cf-4906-815b-4c47215e79bc",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31921,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:63973d88-3244-418b-80b8-a6d2e9d1ac19",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31993,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:139fa7ce-b1e2-49ea-9dde-e2a0c0a03389",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32015,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 75,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:3c7bbac2-49a2-4d9f-a9de-bcd83cae47b9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32090,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 18,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes = [null, true, 4, []];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:cc50cea6-4dff-480f-bda7-5eff456c85f4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32108,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 75,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.issuanceDate = new Date().toISOString()\n          .replace('.000Z', 'Z');\n        const {result, error} = await issuer.post({json: body});\n        should.exist(result, 'Expected result from issuer.');\n        should.not.exist(error, 'Expected issuer to not Error.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:89e954dd-f982-4c98-9868-f5e6c944e059",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MAY have property \"issuanceDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32183,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 28,
              "state": "passed",
              "speed": "fast"
            },
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYear = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = new Date(oneYear).toISOString()\n          .replace('.000Z', 'Z');\n        const {result, error} = await issuer.post({json: body});\n        should.exist(result, 'Expected result from issuer.');\n        should.not.exist(error, 'Expected issuer to not Error.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:2c81f87c-2fec-4a6a-b648-734ac7538daa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32211,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 33,
              "state": "passed",
              "speed": "fast"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "pHT8jHkFQsxXzCdIzpTDb",
          "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
          "_testId": "urn:uuid:a6f6fc0e-2d57-4f47-baab-c28a9bf0a350"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "tt100MzcTfpiJ0QkTXn0p",
      "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
      "summary": {},
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Issuer",
      "reportData": [],
      "_testId": "urn:uuid:6c5e1a87-8523-4152-8a26-773bea1b798d",
      "columns": [
        "SpruceID"
      ],
      "rows": [
        {
          "id": "MUST successfully issue a credential.",
          "cells": [
            {
              "type": "test",
              "title": "MUST successfully issue a credential.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const {result, data: issuedVc, error} = await issuer.post({json: body});\n        should.exist(result, 'Expected result from issuer.');\n        should.exist(issuedVc, 'Expected result to have data.');\n        should.not.exist(error, 'Expected issuer to not Error.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n        shouldBeIssuedVc({issuedVc});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:e22a175e-0181-413c-9d5e-4aa675bde80c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST successfully issue a credential."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31705,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 26,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "Request body MUST have property \"credential\".",
          "cells": [
            {
              "type": "test",
              "title": "Request body MUST have property \"credential\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.verifiableCredential = {...body.credential};\n        delete body.credential;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:3c2ae681-4883-46ca-98d1-825db3507d05",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "Request body MUST have property \"credential\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31731,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 19,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "credential MUST have property \"@context\".",
          "cells": [
            {
              "type": "test",
              "title": "credential MUST have property \"@context\".",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential['@context'];\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:a4fecc6b-91ac-4a19-809b-dddc033efcfe",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"@context\"."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31750,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "credential \"@context\" MUST be an array.",
          "cells": [
            {
              "type": "test",
              "title": "credential \"@context\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential['@context'] = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:7603dc7b-ed8d-4dbe-a86e-763f8bb11767",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential \"@context\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31772,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "credential \"@context\" items MUST be strings.",
          "cells": [
            {
              "type": "test",
              "title": "credential \"@context\" items MUST be strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidContextTypes = [{foo: true}, 4, false, null];\n        for(const invalidContextType of invalidContextTypes) {\n          body.credential['@context'] = invalidContextType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:47b6c8b9-5873-4cb8-b8ea-0f7246d887f6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential \"@context\" items MUST be strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31794,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "credential MUST have property \"type\"",
          "cells": [
            {
              "type": "test",
              "title": "credential MUST have property \"type\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.type;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:0804bd7e-fe79-4e5a-aa66-8ea980f742b9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"type\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31870,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 28,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "\"credential.type\" MUST be an array.",
          "cells": [
            {
              "type": "test",
              "title": "\"credential.type\" MUST be an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.type = 4;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:ff296a24-407e-42bb-8446-a05bdf2da2b4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.type\" MUST be an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31898,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "\"credential.type\" items MUST be strings",
          "cells": [
            {
              "type": "test",
              "title": "\"credential.type\" items MUST be strings",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialTypes = [null, true, 4, []];\n        for(const invalidCredentialType of invalidCredentialTypes) {\n          body.credential.type = invalidCredentialType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:667dc905-a1cf-4906-815b-4c47215e79bc",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.type\" items MUST be strings"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31921,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "credential MUST have property \"issuer\"",
          "cells": [
            {
              "type": "test",
              "title": "credential MUST have property \"issuer\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.issuer;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:63973d88-3244-418b-80b8-a6d2e9d1ac19",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"issuer\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31993,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "\"credential.issuer\" MUST be a string or an object",
          "cells": [
            {
              "type": "test",
              "title": "\"credential.issuer\" MUST be a string or an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidIssuerTypes = [null, true, 4, []];\n        for(const invalidIssuerType of invalidIssuerTypes) {\n          body.credential.issuer = invalidIssuerType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:139fa7ce-b1e2-49ea-9dde-e2a0c0a03389",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.issuer\" MUST be a string or an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32015,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 75,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "credential MUST have property \"credentialSubject\"",
          "cells": [
            {
              "type": "test",
              "title": "credential MUST have property \"credentialSubject\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        delete body.credential.credentialSubject;\n        const {result, error} = await issuer.post({json: body});\n        shouldThrowInvalidInput({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:3c7bbac2-49a2-4d9f-a9de-bcd83cae47b9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MUST have property \"credentialSubject\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32090,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 18,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "\"credential.credentialSubject\" MUST be an object",
          "cells": [
            {
              "type": "test",
              "title": "\"credential.credentialSubject\" MUST be an object",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        const invalidCredentialSubjectTypes = [null, true, 4, []];\n        for(const invalidCredentialSubjectType of\n          invalidCredentialSubjectTypes) {\n          body.credential.credentialSubject = invalidCredentialSubjectType;\n          const {result, error} = await issuer.post({json: {...body}});\n          shouldThrowInvalidInput({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:cc50cea6-4dff-480f-bda7-5eff456c85f4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "\"credential.credentialSubject\" MUST be an object"
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32108,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 75,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "credential MAY have property \"issuanceDate\"",
          "cells": [
            {
              "type": "test",
              "title": "credential MAY have property \"issuanceDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        body.credential.issuanceDate = new Date().toISOString()\n          .replace('.000Z', 'Z');\n        const {result, error} = await issuer.post({json: body});\n        should.exist(result, 'Expected result from issuer.');\n        should.not.exist(error, 'Expected issuer to not Error.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:89e954dd-f982-4c98-9868-f5e6c944e059",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MAY have property \"issuanceDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32183,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 28,
              "state": "passed",
              "speed": "fast"
            }
          ]
        },
        {
          "id": "credential MAY have property \"expirationDate\"",
          "cells": [
            {
              "type": "test",
              "title": "credential MAY have property \"expirationDate\"",
              "body": "async function() {\n        this.test.cell = {\n          columnId: name,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({issuer});\n        // expires in a year\n        const oneYear = Date.now() + 365 * 24 * 60 * 60 * 1000;\n        body.credential.expirationDate = new Date(oneYear).toISOString()\n          .replace('.000Z', 'Z');\n        const {result, error} = await issuer.post({json: body});\n        should.exist(result, 'Expected result from issuer.');\n        should.not.exist(error, 'Expected issuer to not Error.');\n        result.status.should.equal(201, 'Expected statusCode 201.');\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-issuer-test-suite/vc-api-issuer-test-suite/tests/11-issuer-jwt.js",
              "parent": "uqUKMIIvq-3Yj5GEoNRgx",
              "ctx": null,
              "_testId": "urn:uuid:2c81f87c-2fec-4a6a-b648-734ac7538daa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "credential MAY have property \"expirationDate\""
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32211,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 33,
              "state": "passed",
              "speed": "fast"
            }
          ]
        }
      ]
    }
  ],
  "tables": [],
  "summary": [],
  "respecConfig": {
    "specStatus": "unofficial",
    "shortName": "vc-api-issuer-test-suite",
    "subtitle": "Test Interoperability Report for Verifiable Credentials API Issuer",
    "github": "https://github.com/w3c-ccg/vc-api-issuer-test-suite",
    "edDraftURI": "https://w3c-ccg.github.io/vc-api/#issue-credential",
    "doJsonLd": true,
    "includePermalinks": false,
    "editors": [
      {
        "name": "Andrew Jones",
        "url": "https://github.com/aljones15",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ],
    "authors": [
      {
        "name": "Andrew Jones",
        "url": "https://github.com/aljones15",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      },
      {
        "name": "Manu Sporny",
        "url": "http://manu.sporny.org/",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ]
  },
  "title": "VC API Issuer Interoperability Report 1.0",
  "stats": [
    "Tests passed 134/157 85%",
    "Tests failed 23/157 15%",
    "Failures 23",
    "Tests skipped 11",
    "Total tests 168"
  ]
}